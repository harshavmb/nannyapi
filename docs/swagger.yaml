definitions:
  agent.AgentInfo:
    properties:
      created_at:
        type: string
      hostname:
        type: string
      id:
        type: string
      ip_address:
        type: string
      kernel_version:
        type: string
      os_version:
        type: string
      system_metrics:
        $ref: '#/definitions/agent.SystemMetrics'
      updated_at:
        type: string
      user_id:
        type: string
    type: object
  agent.SystemMetrics:
    properties:
      cpu_info:
        description: CPU information from /proc/cpuinfo
        items:
          type: string
        type: array
      cpu_usage:
        description: Current CPU usage percentage
        type: number
      disk_usage:
        additionalProperties:
          type: integer
        description: Disk usage per mount point in bytes
        type: object
      fs_usage:
        additionalProperties:
          type: string
        description: Filesystem usage percentages
        type: object
      memory_free:
        description: Free memory in bytes
        type: integer
      memory_total:
        description: Total memory in bytes
        type: integer
      memory_used:
        description: Used memory in bytes
        type: integer
    type: object
  diagnostic.ContinueDiagnosticRequest:
    properties:
      diagnostic_output:
        items:
          type: string
        type: array
      system_metrics:
        $ref: '#/definitions/agent.SystemMetrics'
    type: object
  diagnostic.DiagnosticCommand:
    properties:
      command:
        type: string
      timeout_seconds:
        type: integer
    type: object
  diagnostic.DiagnosticResponse:
    properties:
      commands:
        items:
          $ref: '#/definitions/diagnostic.DiagnosticCommand'
        type: array
      diagnosis_type:
        type: string
      impact:
        type: string
      log_checks:
        items:
          $ref: '#/definitions/diagnostic.LogCheck'
        type: array
      next_step:
        type: string
      root_cause:
        type: string
      severity:
        type: string
      system_snapshot:
        $ref: '#/definitions/agent.SystemMetrics'
    type: object
  diagnostic.DiagnosticSession:
    properties:
      agent_id:
        type: string
      created_at:
        type: string
      current_iteration:
        type: integer
      history:
        items:
          $ref: '#/definitions/diagnostic.DiagnosticResponse'
        type: array
      id:
        type: string
      initial_issue:
        type: string
      max_iterations:
        type: integer
      status:
        type: string
      updated_at:
        type: string
      user_id:
        type: string
    type: object
  diagnostic.LogCheck:
    properties:
      grep_pattern:
        type: string
      log_path:
        type: string
    type: object
  diagnostic.StartDiagnosticRequest:
    properties:
      agent_id:
        type: string
      issue:
        type: string
    type: object
  token.Token:
    properties:
      created_at:
        type: string
      hashed_token:
        type: string
      id:
        type: string
      retrieved:
        type: boolean
      token:
        type: string
      user_id:
        type: string
    type: object
  user.User:
    properties:
      avatar_url:
        type: string
      email:
        type: string
      html_url:
        type: string
      id:
        type: string
      last_logged_in:
        type: string
      name:
        type: string
    type: object
info:
  contact:
    email: harsha@harshanu.space
    name: API Support
    url: https://nannyai.dev/support
  license:
    name: GNU General Public License v3.0
    url: https://www.gnu.org/licenses/gpl-3.0.html
paths:
  /api/agent-info:
    post:
      consumes:
      - application/json
      description: Creates or updates agent information with system metrics
      produces:
      - application/json
      responses:
        "201":
          description: Successfully created agent info
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Invalid request payload or missing required fields
          schema:
            type: string
        "401":
          description: User not authenticated
          schema:
            type: string
        "500":
          description: Failed to save agent info
          schema:
            type: string
      summary: Create agent information
      tags:
      - agent-info
  /api/agent-info/{id}:
    get:
      description: Retrieves agent information for a specific agent ID
      parameters:
      - description: Agent ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved agent info
          schema:
            $ref: '#/definitions/agent.AgentInfo'
        "400":
          description: Invalid ID format or Agent ID is required
          schema:
            type: string
        "401":
          description: User not authenticated
          schema:
            type: string
        "404":
          description: Agent info not found
          schema:
            type: string
        "500":
          description: Failed to retrieve agent info
          schema:
            type: string
      summary: Get specific agent info
      tags:
      - agent-info
  /api/agents:
    get:
      consumes:
      - application/json
      description: Retrieves agent information by ID.
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved agent info
          schema:
            items:
              $ref: '#/definitions/agent.AgentInfo'
            type: array
        "400":
          description: Invalid request payload
          schema:
            type: string
        "401":
          description: User not authenticated
          schema:
            type: string
        "500":
          description: Failed to retrieve agents info
          schema:
            type: string
      summary: Get agent info by ID
      tags:
      - agent-info
  /api/auth-token:
    post:
      description: Creates auth token (aka API key) for the authenticated user.
      produces:
      - application/json
      responses:
        "201":
          description: id of the inserted token
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Invalid request payload
          schema:
            type: string
        "401":
          description: User not authenticated
          schema:
            type: string
        "500":
          description: Failed to create API key
          schema:
            type: string
      summary: Creates auth token (aka API key) for the authenticated user
      tags:
      - auth-token
  /api/auth-token/{id}:
    delete:
      description: Deletes a specific auth token by ID.
      parameters:
      - description: Token ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Auth token deleted successfully
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Invalid token ID format or Token ID is required
          schema:
            type: string
        "500":
          description: Failed to delete auth token
          schema:
            type: string
      summary: Delete an auth token
      tags:
      - auth-tokens
  /api/auth-tokens:
    get:
      description: Retrieves all auth tokens for the authenticated user
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved auth tokens
          schema:
            items:
              $ref: '#/definitions/token.Token'
            type: array
        "401":
          description: User not authenticated
          schema:
            type: string
        "500":
          description: Failed to retrieve auth tokens
          schema:
            type: string
      summary: Get all auth tokens
      tags:
      - auth-tokens
  /api/diagnostic:
    post:
      consumes:
      - application/json
      description: Start a new Linux system diagnostic session
      parameters:
      - description: Start diagnostic request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/diagnostic.StartDiagnosticRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Successfully created diagnostic session
          schema:
            $ref: '#/definitions/diagnostic.DiagnosticSession'
        "400":
          description: Invalid request payload or missing required fields
          schema:
            type: string
        "401":
          description: User not authenticated
          schema:
            type: string
        "403":
          description: User not authorized
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Start diagnostic session
      tags:
      - diagnostic
  /api/diagnostic/{id}:
    delete:
      description: Delete a diagnostic session and its associated data
      parameters:
      - description: Session ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Session deleted successfully
          schema:
            type: string
        "400":
          description: Invalid session ID
          schema:
            type: string
        "401":
          description: User not authenticated
          schema:
            type: string
        "403":
          description: User not authorized
          schema:
            type: string
        "404":
          description: Session not found
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Delete a diagnostic session
      tags:
      - diagnostic
    get:
      description: Get details of a diagnostic session
      parameters:
      - description: Session ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/diagnostic.DiagnosticSession'
        "400":
          description: Invalid session ID format
          schema:
            type: string
        "404":
          description: Session not found
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Get diagnostic session
      tags:
      - diagnostic
  /api/diagnostic/{id}/continue:
    post:
      consumes:
      - application/json
      description: Continue an existing Linux system diagnostic session
      parameters:
      - description: Session ID
        in: path
        name: id
        required: true
        type: string
      - description: Continue diagnostic request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/diagnostic.ContinueDiagnosticRequest'
      produces:
      - application/json
      responses:
        "200":
          description: When diagnosis is completed
          schema:
            $ref: '#/definitions/diagnostic.DiagnosticSession'
        "201":
          description: When diagnosis is still in progress
          schema:
            $ref: '#/definitions/diagnostic.DiagnosticSession'
        "400":
          description: Invalid request
          schema:
            type: string
        "404":
          description: Session not found
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Continue a diagnostic session
      tags:
      - diagnostic
  /api/diagnostic/{id}/summary:
    get:
      description: Get a summary of the diagnostic session
      parameters:
      - description: Session ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Diagnostic summary
          schema:
            type: string
        "400":
          description: Invalid session ID format
          schema:
            type: string
        "404":
          description: Session not found
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Get diagnostic summary
      tags:
      - diagnostic
  /api/diagnostics:
    get:
      description: List all diagnostic sessions for the authenticated user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/diagnostic.DiagnosticSession'
            type: array
        "401":
          description: User not authenticated
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: List diagnostic sessions
      tags:
      - diagnostic
  /api/refresh-token:
    post:
      consumes:
      - application/json
      description: Handle refresh token validation, creation and creation of accessTokens
        too
      parameters:
      - description: Refresh Token
        in: body
        name: refreshToken
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: refreshToken and accessToken
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Invalid request payload
          schema:
            type: string
        "401":
          description: User not authenticated
          schema:
            type: string
        "500":
          description: Failed to create refresh token
          schema:
            type: string
      summary: Handle refresh token validation, creation and creation of accessTokens
        too
      tags:
      - refresh-token
  /api/user-auth-token:
    get:
      description: Fetch user info from auth token
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              type: string
            type: array
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Fetch user info from auth token
      tags:
      - auth-tokens
  /api/user/{id}:
    get:
      description: Retrieves user information by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved user info
          schema:
            $ref: '#/definitions/user.User'
        "400":
          description: Invalid user ID format or User ID is required
          schema:
            type: string
        "404":
          description: User not found
          schema:
            type: string
        "500":
          description: Failed to retrieve user info
          schema:
            type: string
      summary: Get user information
      tags:
      - users
  /status:
    get:
      consumes:
      - application/json
      description: Status of the API
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              type: string
            type: array
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Status of the API
      tags:
      - status
swagger: "2.0"
